@page "/"
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<PageTitle>Mootra - Add</PageTitle>

<div class="container">
    <h1 class="display-2 p-5 text-center">Mootra</h1>

    <form class="mx-auto" style="max-width:768px">
        <div class="my-5">
            <label class="form-label display-6" for="moodSelect">Right now I'm feeling...</label>
            <select @bind="this.inputValue" class="form-control bg-dark text-white border-3 btn-outline-secondary">
                @foreach (Emotion emotion in this.emotions.DistinctBy(e => e.Name))
                {
                    <option value="@emotion.Name">@emotion.Name</option> 
                }
            </select>
        </div>

        <div class="my-5">
            <label class="form-label display-6" for="moodInput">Or type it...</label>
            <input @bind="this.inputValue" class="form-control bg-transparent text-white border-3 btn-outline-secondary" type="text" name="moodInput"/>
        </div>

        <input @onclick="this.SubmitEmotion" class="btn btn-primary" type="submit" value="Submit"/>
    </form>
</div>

@code {
    /// <summary>
    /// The current input value.
    /// </summary>
    private string? inputValue;

    /// <summary>
    /// Contains the current list of emotion names.
    /// </summary>
    private List<Emotion> emotions = new();

    /// <summary>
    /// 
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        await this.RefreshEmotions();
    }

    /// <summary>
    /// Submits the current input value as an emotion if it exists.
    /// </summary>
    private async Task SubmitEmotion()
    {
        if (this.inputValue != null)
        {
            await this.httpClient.PostAsJsonAsync<Emotion>($"{navigationManager.BaseUri}emotions", new Emotion(this.inputValue));
            await this.RefreshEmotions();
        }
        else
        {
            // Tell user no input was found.
        }
    }

    /// <summary>
    /// 
    /// </summary>
    /// <returns></returns>
    private async Task RefreshEmotions()
    {
        this.emotions = await httpClient.GetFromJsonAsync<List<Emotion>>($"{navigationManager.BaseUri}emotions") ?? new();
    }
}